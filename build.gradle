plugins {
    id 'org.kordamp.gradle.jacoco' version '0.47.0'
}

allprojects {
	repositories {
		mavenCentral()
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'checkstyle'
	apply plugin: 'jacoco'
	
	
	group = 'oopp'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '11'
	checkstyle {
		toolVersion "9.2.1"

		ignoreFailures = false
		maxErrors = 0
		maxWarnings = 0
		configFile = '../checkstyle.xml' as File
	}

	tasks.named('test') {
		useJUnitPlatform()
		finalizedBy jacocoTestReport 
	}

	jacocoTestReport {
		reports {
			xml.required = false
			csv.required = false
			html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
			}
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}
	
	dependencies {
		implementation 'org.apache.commons:commons-lang3:3.12.0'
		implementation group: 'com.auth0', name: 'java-jwt', version: '3.18.3'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.1'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.1'
		testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.22.0'
		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
		testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
		testImplementation 'org.mockito:mockito-core:4.1.0'

		/**
		 * Lombok
		 */
		compileOnly 'org.projectlombok:lombok:1.18.22'
		annotationProcessor 'org.projectlombok:lombok:1.18.22'
		testCompileOnly 'org.projectlombok:lombok:1.18.22'
		testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

		/**
		 * SpringBoot validator
		 */
		implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.3'

		/**
		 * ModelMapper
		 */
		implementation 'org.modelmapper:modelmapper:3.0.0'

		/**
		 * Guava
		 */
		implementation 'com.google.guava:guava:31.0.1-jre'
	}
}
