image: gradle:7.3.3-jdk17-alpine

variables:
  # Disable the Gradle daemon to ensure isolated runs of the CI pipeline.
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  SPRING_PROPS_POSTGRES_HOST: postgres
  POSTGRES_DB: oopp
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: "1234"
  POSTGRES_HOST_AUTH_METHOD: trust

services:
  - postgres

stages:
  - build
  - analysis
  - test

build:
  stage: build
  script:
    - ./gradlew --build-cache assemble
  artifacts:
    paths:
      - ./server/build/libs/
      - ./client/build/libs/
      - ./commons/build/libs/
    exclude:
      - "*-plain.jar"
    expire_in: 1 hour

rearrange_artifacts:
  stage: build
  needs: [build]
  variables:
    GIT_STRATEGY: none
  script:
    - mkdir ./artifacts
    - mv ./server/build/libs/* ./artifacts/
    - mv ./client/build/libs/* ./artifacts/
    - mv ./commons/build/libs/* ./artifacts/
  artifacts:
    paths:
      - ./artifacts/
    exclude:
      - "*-plain.jar"
    expire_in: 3 days

checkstyle-main:
  stage: analysis
  needs: [build]
  script: ./gradlew checkstyleMain
  cache:
    key: "$CI_COMMIT_REF_NAME-main"
    policy: pull
    paths:
      - build/
      - .gradle/
  allow_failure: true

checkstyle-test:
  stage: analysis
  needs: [build]
  script: ./gradlew checkstyleTest
  cache:
    key: "$CI_COMMIT_REF_NAME-test"
    policy: pull
    paths:
      - build/
      - .gradle/
  allow_failure: true

test:
  stage: test
  needs: [build]
  script:
    - echo "GitLab CI/CD | Print all environment variables"
    - env
    - ./gradlew AggregateJacocoReport
    # preserve coverage information in an easy-to-reach folder
    - mv build/reports/jacoco/aggregate/html ./coverage
    - mv build/reports/jacoco/aggregate/jacocoTestReport.xml ./coverage/report.xml
    - echo `cat coverage/index.html | grep -o -E "Total[^%]+?%" | sed -E "s/<.*>//" | sed -E "s/Total/TestCoverage:/"`
  artifacts:
    paths:
      - ./coverage
    expose_as: "Test coverage report"
  coverage: /TestCoverage:(\d+)%/
